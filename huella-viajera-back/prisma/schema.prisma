// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  email     String    @unique
  password  String
  role      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  carer     Carer?
  ownerPet  OwnerPet?
  ratings   Rating[]
}

model Carer {
  id           String        @id @default(uuid()) @db.Uuid
  name         String
  dni          Int           @unique
  phone        String
  address      String
  city         String
  postcode     String
  country      String
  bio          String?
  image        String?
  user         User          @relation(fields: [userId], references: [id])
  userId       String        @unique @db.Uuid
  applications Application[]
}

model OwnerPet {
  id             String          @id @default(uuid()) @db.Uuid
  name           String
  phone          String
  dni            Int             @unique
  address        String
  city           String
  postcode       String
  country        String
  bio            String?
  image          String?
  user           User            @relation(fields: [userId], references: [id])
  userId         String          @unique @db.Uuid
  pets           Pet[]
  advertisements Advertisement[]
}

model Pet {
  id         String   @id @default(uuid()) @db.Uuid
  name       String
  type       String
  breed      String
  age        Int
  weight     Int
  image      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  OwnerPet   OwnerPet @relation(fields: [ownerPetId], references: [id])
  ownerPetId String   @db.Uuid
}

model Rating {
  id        String   @id @default(uuid()) @db.Uuid
  value     Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.Uuid
}

model Advertisement {
  id           String        @id @default(uuid()) @db.Uuid
  title        String
  description  String
  initialDate  DateTime
  finalDate    DateTime
  status       Boolean
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  OwnerPet     OwnerPet?     @relation(fields: [ownerPetId], references: [id])
  ownerPetId   String?       @db.Uuid
  applications Application[]
}

model Application {
  id              String        @id @default(uuid()) @db.Uuid
  message         String
  createdAt       DateTime      @default(now())
  Advertisement   Advertisement @relation(fields: [advertisementId], references: [id])
  advertisementId String        @db.Uuid
  status          Boolean

  Carer   Carer?  @relation(fields: [carerId], references: [id])
  carerId String? @db.Uuid
}
